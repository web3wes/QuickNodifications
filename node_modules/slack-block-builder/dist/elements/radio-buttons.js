"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RadioButtonsBuilder = void 0;
const base_1 = require("../internal/base");
const constants_1 = require("../internal/constants");
const dto_1 = require("../internal/dto");
const helpers_1 = require("../internal/helpers");
const methods_1 = require("../internal/methods");
/**
 * @@link https://api.slack.com/reference/block-kit/block-elements#radio
 * @@displayName Radio Buttons
 */
class RadioButtonsBuilder extends base_1.ElementBuilderBase {
    /** @internal */
    build() {
        return this.getResult(dto_1.SlackElementDto, {
            type: constants_1.ElementType.RadioButtons,
            options: helpers_1.getBuilderResults(this.props.options, { isMarkdown: true }),
            initialOption: helpers_1.getBuilderResult(this.props.initialOption, { isMarkdown: true }),
            confirm: helpers_1.getBuilderResult(this.props.confirm),
        });
    }
}
exports.RadioButtonsBuilder = RadioButtonsBuilder;
helpers_1.applyMixins(RadioButtonsBuilder, [
    methods_1.ActionId,
    methods_1.Confirm,
    methods_1.End,
    methods_1.FocusOnLoad,
    methods_1.InitialOption,
    methods_1.Options,
]);
