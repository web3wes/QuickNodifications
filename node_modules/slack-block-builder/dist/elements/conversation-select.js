"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConversationSelectBuilder = void 0;
const base_1 = require("../internal/base");
const constants_1 = require("../internal/constants");
const dto_1 = require("../internal/dto");
const helpers_1 = require("../internal/helpers");
const methods_1 = require("../internal/methods");
/**
 * @@link https://api.slack.com/reference/block-kit/block-elements#conversation_select
 * @@displayName Conversation Select
 */
class ConversationSelectBuilder extends base_1.ElementBuilderBase {
    /** @internal */
    build() {
        return this.getResult(dto_1.SlackElementDto, {
            type: constants_1.ElementType.ConversationSelect,
            placeholder: helpers_1.getPlainTextObject(this.props.placeholder),
            confirm: helpers_1.getBuilderResult(this.props.confirm),
            filter: helpers_1.getFilter(this.props),
        });
    }
}
exports.ConversationSelectBuilder = ConversationSelectBuilder;
helpers_1.applyMixins(ConversationSelectBuilder, [
    methods_1.ActionId,
    methods_1.Confirm,
    methods_1.DefaultToCurrentConversation,
    methods_1.End,
    methods_1.ExcludeBotUsers,
    methods_1.ExcludeExternalSharedChannels,
    methods_1.Filter,
    methods_1.FocusOnLoad,
    methods_1.InitialConversation,
    methods_1.Placeholder,
    methods_1.ResponseUrlEnabled,
    methods_1.Placeholder,
]);
